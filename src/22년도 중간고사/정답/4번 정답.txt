import java.util.Scanner;

class RainData { // 도시들과 각 도시의 월별 강수량 데이터를 배열에 저장하는 클래스
	
	static int numOfCity = 4; // 정적변수 numOfCity 선언. 도시 개수(4)를 저장
	static int numOfMonth = 6; // 정적변수 numOfMonth 선언. 강수량 개월 수(6)를 저장
	
    private String[] cities = {"Seoul", "Suwon", "Daegu", "Busan"};
    private int[][] rainfall = {{8,7,11,14,8,19}, {11,9,10,12,11,21}, {4,7,11,18,11,21}, {8,11,9,14,18,21}};

    // cities 배열에서 특정 인덱스의 도시를 반환하는 함수 getCity(int i) 정의
	public String getCity(int i) {
		return cities[i];
	}
    
    // rainfall 배열에서 특정 인덱스의 강수량 배열을 반환하는 함수 getRainFall(int i) 정의
	public int[] getRainfall(int i) {
		return rainfall[i];
	}
}

class RainOfCity { // 하나의 도시와 월별 강수량을 정의하는 클래스
    private String city;        // 도시
    private int[] rainOfMonth;  // 강수량 배열

    // 생성자 정의. rainOfMonth 배열 생성하는 기능 수행
    public RainOfCity(int size) {
    	rainOfMonth = new int[size];
    }

    // 도시와 강수량 데이터를 멤버변수에 저장하는 setData 함수 정의
    public void setData(String city, int[] rainfall) {
    	this.city = city;
    	rainOfMonth = rainfall;
    }

    // 도시명이 일치하면 강수량 배열을 반환하고 그렇지 않으면 null을 반환하는 findData 함수 정의
    public int[] findData(String city) {
    	if(this.city.equals(city)) {
    		return rainOfMonth;
    	} else {
    		return null;
    	}
    }

}
public class Main { // ainOfCity 객체 배열을 생성하고 도시와 강수량을 저장하며 특정 도시의 강수량을 검색하는 기능을 수행하는 클래스 
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        RainData rainData = new RainData(); // RainData 객체 생성
        RainOfCity[] cityData = new RainOfCity[RainData.numOfCity];  // cityData 배열 생성. 길이는 도시 개수

        // cityData 배열의 각 원소에 RainOfCity 객체 생성한 다음 setData 메소드 호출을 통해 도시명과 강수량 데이터 저장
        for(int i=0; i < RainData.numOfCity; i++) {
        	cityData[i] = new RainOfCity(6); // RainOfCity 객체 생성하기
        	// setData 메소드 호출하기. 도시명과 강수량 데이터는 rainData 객체의 getCity(), getRainFall() 메소드를 통해 가져 온다. 
        	cityData[i].setData(rainData.getCity(i), rainData.getRainfall(i));
        }
        while(true) {
            System.out.print("City to find(Enter exit to quit) : ");
            String city = in.next();
            if(city.equals("exit")) break;
            
            int[] rainArr = null;
            boolean found = false;
            for(int i=0; i < RainData.numOfCity; i++) {
            	// 찾고자 하는 도시의 강수량 데이터를 받은 다음 강수량 데이터가 null 이 아닌 경우(찾았으므로) 반복문을 종료
            	rainArr = cityData[i].findData(city); // 찾고자 하는 도시의 강수량 데이터를 받음
            	if(rainArr != null) { // null이 아니라서 반복문을 종료함.
            		found = true;
            		break;
            	}
            }
            if(found) {
                System.out.println("# CITY : " + city);
                System.out.print("# Rain of months(1~6) : [ ");
                for(int r : rainArr) System.out.print(r + " ");
                System.out.println("]");    
            }
            else System.out.println(city + "'s rainfall data dosen't exist!!");
        }
        in.close();
    }
}